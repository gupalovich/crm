map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

log_format custom '$remote_addr - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent '
            '"$http_referer" "$http_user_agent" "$request_body">';
server {
    listen  80;
    server_name "~^www\.(.*)$" ;
    return 301 https://$1$request_uri ;
}

server {
    listen 80;
    server_name "~^(?!www\.).*" ;
    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://front:4000;
    }

    location ~ ^/(api|admin|feed|sitemap|ckeditor) {
        rewrite (^[^?]+[^/?])([^/]*)$ $1/$2 last;

        proxy_pass http://web:8000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 20M;
    }

    location /flower/ {
        proxy_pass http://celery_flower:__flower_port__;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;

#         auth_basic  "Restricted";
#         auth_basic_user_file  /etc/nginx/.htpasswd;
    }

    location /static {
        autoindex on;
        alias /static;
    }

    location /media {
        autoindex on;
        alias /media;
    }
}
